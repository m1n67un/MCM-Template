plugins {
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'checkstyle'
}

repositories {
    mavenCentral()
}

tasks.bootJar {
    enabled = false
}

checkstyle {
    maxWarnings = 0
    configFile = file("${rootDir}/config/custom-checkstyle-rules.xml")
    configProperties = ["suppressionFile": "${rootDir}/config/custom-checkstyle-suppressions.xml"]
    toolVersion = "8.42"
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    group = 'com.m1n67un'
    version = '1.0'
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-websocket'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-validation:'
        implementation 'org.springframework.boot:spring-boot-configuration-processor'
        implementation 'org.springframework.boot:spring-boot-devtools'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'
        implementation 'org.apache.commons:commons-lang3:3.12.0'
        implementation 'com.google.guava:guava:31.1-jre'
        implementation 'dev.akkinoc.util:yaml-resource-bundle:2.8.0'
        implementation 'com.google.code.gson:gson:2.10.1'
        implementation 'org.json:json:20220924'
        implementation 'com.googlecode.json-simple:json-simple:1.1.1'
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.1'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        compileOnly 'org.projectlombok:lombok:1.18.24'
        testCompileOnly 'org.projectlombok:lombok:1.18.24'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
        annotationProcessor 'org.projectlombok:lombok:1.18.24'
        implementation 'org.mapstruct:mapstruct:1.5.3.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
        implementation 'org.apache.poi:poi:3.14'
        implementation 'org.apache.poi:poi-ooxml:3.14'


        implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
        implementation 'ch.qos.logback:logback-classic:1.4.7'
        implementation 'ch.qos.logback:logback-core:1.4.7'
        implementation 'ch.qos.logback.db:logback-classic-db:1.2.11.1'
        implementation 'org.slf4j:slf4j-api:2.0.6'

        implementation 'org.springframework.boot:spring-boot-starter-jdbc'

        //maria : db1
        implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.1'
        //mysql : db2
        implementation 'mysql:mysql-connector-java'
        //oracle : db3
        implementation 'com.oracle.database.jdbc:ojdbc8'
        //msSql : db4
        implementation 'com.microsoft.sqlserver:mssql-jdbc'
        //postgresql : db5
        implementation 'org.postgresql:postgresql'

        //user agent
        implementation 'eu.bitwalker:UserAgentUtils:1.21'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'

    }

    test {
        useJUnitPlatform()
    }

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    tasks.withType(JavaCompile){
        options.encoding = 'UTF-8'
    }

}

project(':module-api') {
    apply plugin: 'war'

    jar {
        manifest {
            attributes 'Main-Class': 'com.mg.ApiApplication'
        }
        enabled = false
    }

    bootJar {
        enabled = true
        mainClass = 'com.mg.ApiApplication'
    }

    dependencies {
        implementation project(':module-core')
        implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
        implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
        implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    }
}

project(':module-batch') {
    apply plugin: 'war'

    jar {
        manifest {
            attributes 'Main-Class': 'com.mg.batch.BatchApplication'
        }
        enabled = false
    }

    dependencies {
        implementation project(':module-core')
        implementation 'org.springframework.boot:spring-boot-starter-batch'
        implementation 'org.springframework.boot:spring-boot-starter-quartz'
        implementation 'org.quartz-scheduler:quartz:2.3.2'
        implementation 'com.google.code.gson:gson:2.7'
        implementation 'org.json:json:20200518'
    }
}

project(':module-core') {
    apply plugin: 'java-library'

    tasks.bootJar {
        enabled = false
    }

    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])
    }

}

project(':module-eureka') {
    apply plugin: 'war'

    jar {
        manifest {
            attributes 'Main-Class': 'com.mg.eureka.EurekaServerApplication'
        }
        enabled = false
    }

    bootJar {
        enabled = true
        mainClass = 'com.mg.eureka.EurekaServerApplication'
    }

    dependencies {
        implementation project(':module-core')
    }
}

project(':module-gateway') {
    apply plugin: 'war'

    jar {
        manifest {
            attributes 'Main-Class': 'com.mg.gateway.GatewayApplication'
        }
        enabled = false
    }

    bootJar {
        enabled = true
        mainClass = 'com.mg.gateway.GatewayApplication'
    }

    dependencies {
        implementation project(':module-core')
    }
}